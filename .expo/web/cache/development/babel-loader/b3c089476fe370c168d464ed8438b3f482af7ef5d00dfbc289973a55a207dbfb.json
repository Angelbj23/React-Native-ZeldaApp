{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { images } from \"../../data/images\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Favorites = function Favorites() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    favorites = _useState2[0],\n    setFavorites = _useState2[1];\n  useEffect(function () {\n    var getFavorites = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storedFavorites = yield AsyncStorage.getItem('favorites');\n          if (storedFavorites) {\n            var parsedFavorites = JSON.parse(storedFavorites);\n            setFavorites(parsedFavorites);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function getFavorites() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getFavorites();\n  }, []);\n  var getGameImage = function getGameImage(id) {\n    var image = images.find(function (img) {\n      return img.id === id;\n    });\n    return image ? image.url : '';\n  };\n  var removeFromFavorites = function () {\n    var _ref2 = _asyncToGenerator(function* (gameId) {\n      try {\n        var updatedFavorites = favorites.filter(function (game) {\n          return game.id !== gameId;\n        });\n        yield AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n        setFavorites(updatedFavorites);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function removeFromFavorites(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var removeAllFavorites = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem('favorites');\n        setFavorites([]);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function removeAllFavorites() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.scrollContentContainer,\n    children: [favorites.length > 0 ? favorites.map(function (game) {\n      return _jsxs(View, {\n        style: styles.cardContainer,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: game.name\n        }), _jsx(Image, {\n          source: {\n            uri: getGameImage(game.id)\n          },\n          style: styles.image\n        }), _jsxs(Text, {\n          style: styles.developer,\n          children: [\"Developer: \", game.developer]\n        }), _jsxs(Text, {\n          style: styles.publisher,\n          children: [\"Publisher: \", game.publisher]\n        }), _jsxs(Text, {\n          style: styles.releaseDate,\n          children: [\"Release Date: \", game.released_date]\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return removeFromFavorites(game.id);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Remove from Favorites\"\n          })\n        })]\n      }, game.id);\n    }) : _jsx(Text, {\n      style: styles.noFavoritesText,\n      children: \"No items added to favorites yet.\"\n    }), favorites.length > 0 && _jsx(TouchableOpacity, {\n      style: styles.clearButton,\n      onPress: removeAllFavorites,\n      children: _jsx(Text, {\n        style: styles.clearButtonText,\n        children: \"Clear All Favorites\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  scrollContentContainer: {\n    backgroundColor: '#008f39',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardContainer: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  button: {\n    backgroundColor: '#ff4c4c',\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  noFavoritesText: {\n    fontSize: 18,\n    color: 'white',\n    marginTop: 20\n  },\n  clearButton: {\n    backgroundColor: '#ff4c4c',\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 20\n  },\n  clearButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default Favorites;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","ScrollView","StyleSheet","TouchableOpacity","AsyncStorage","images","jsx","_jsx","jsxs","_jsxs","Favorites","_useState","_useState2","_slicedToArray","favorites","setFavorites","getFavorites","_ref","_asyncToGenerator","storedFavorites","getItem","parsedFavorites","JSON","parse","error","console","log","apply","arguments","getGameImage","id","image","find","img","url","removeFromFavorites","_ref2","gameId","updatedFavorites","filter","game","setItem","stringify","_x","removeAllFavorites","_ref3","removeItem","contentContainerStyle","styles","scrollContentContainer","children","length","map","style","cardContainer","title","name","source","uri","developer","publisher","releaseDate","released_date","button","onPress","buttonText","noFavoritesText","clearButton","clearButtonText","create","backgroundColor","flexGrow","justifyContent","alignItems","borderRadius","padding","marginTop","marginBottom","width","fontSize","fontWeight","color","height","textAlign"],"sources":["C:/Users/Lenovo/Desktop/React-Native-Project/components/Favorites/Favorites.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { images } from '../../data/images';\r\n\r\ninterface Game {\r\n  name: string;\r\n  description: string;\r\n  developer: string;\r\n  publisher: string;\r\n  released_date: string;\r\n  id: string;\r\n  image: string;\r\n}\r\n\r\nconst Favorites = () => {\r\n  const [favorites, setFavorites] = useState<Game[]>([]);\r\n\r\n  useEffect(() => {\r\n    const getFavorites = async () => {\r\n      try {\r\n        const storedFavorites = await AsyncStorage.getItem('favorites');\r\n        if (storedFavorites) {\r\n          const parsedFavorites: Game[] = JSON.parse(storedFavorites);\r\n          setFavorites(parsedFavorites);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getFavorites();\r\n  }, []);\r\n\r\n  const getGameImage = (id: string) => {\r\n    const image = images.find((img) => img.id === id);\r\n    return image ? image.url : '';\r\n  };\r\n\r\n  const removeFromFavorites = async (gameId: string) => {\r\n    try {\r\n      const updatedFavorites = favorites.filter((game) => game.id !== gameId);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n      setFavorites(updatedFavorites);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const removeAllFavorites = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem('favorites');\r\n      setFavorites([]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollContentContainer}>\r\n      {favorites.length > 0 ? (\r\n        favorites.map((game) => (\r\n          <View key={game.id} style={styles.cardContainer}>\r\n            <Text style={styles.title}>{game.name}</Text>\r\n            <Image source={{ uri: getGameImage(game.id) }} style={styles.image} />\r\n            <Text style={styles.developer}>Developer: {game.developer}</Text>\r\n            <Text style={styles.publisher}>Publisher: {game.publisher}</Text>\r\n            <Text style={styles.releaseDate}>Release Date: {game.released_date}</Text>\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => removeFromFavorites(game.id)}\r\n            >\r\n              <Text style={styles.buttonText}>Remove from Favorites</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))\r\n      ) : (\r\n        <Text style={styles.noFavoritesText}>No items added to favorites yet.</Text>\r\n      )}\r\n      {favorites.length > 0 && (\r\n        <TouchableOpacity style={styles.clearButton} onPress={removeAllFavorites}>\r\n          <Text style={styles.clearButtonText}>Clear All Favorites</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollContentContainer: {\r\n    backgroundColor: '#008f39',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  cardContainer: {\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    width: '80%',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n  },\r\n  developer: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n    marginBottom: 5,\r\n  },\r\n  publisher: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n    marginBottom: 5,\r\n  },\r\n  releaseDate: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n    marginBottom: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#ff4c4c',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  noFavoritesText: {\r\n    fontSize: 18,\r\n    color: 'white',\r\n    marginTop: 20,\r\n  },\r\n  clearButton: {\r\n    backgroundColor: '#ff4c4c',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 20,\r\n  },\r\n  clearButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default Favorites;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}