{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (username === 'admin' && password === 'password') {\n        yield AsyncStorage.setItem('isLoggedIn', 'true');\n        console.log('Login successful');\n        navigation.navigate('Games');\n      } else {\n        console.log('Login failed');\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    })]\n  });\n};\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#edb525'\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    marginVertical: 10,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  button: {\n    width: '80%',\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","Text","StyleSheet","AsyncStorage","useNavigation","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","navigation","handleLogin","_ref","_asyncToGenerator","setItem","console","log","navigate","apply","arguments","style","styles","container","children","input","placeholder","value","onChangeText","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","width","height","marginVertical","paddingHorizontal","borderColor","borderWidth","borderRadius","color","fontSize"],"sources":["/Users/corso17/Desktop/React-Native-Project/components/Login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet, ImageBackground } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport zelda from '../../assets/zelda.jpeg'\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigation = useNavigation();\n\n  const handleLogin = async () => {\n    // Effettua la logica di autenticazione qui\n    if (username === 'admin' && password === 'password') {\n      // Memorizza le credenziali utilizzando AsyncStorage\n      await AsyncStorage.setItem('isLoggedIn', 'true');\n      console.log('Login successful');\n      // Esegui la navigazione verso la schermata \"Games\"\n      navigation.navigate('Games');\n    } else {\n      console.log('Login failed');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Login</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        value={username}\n        onChangeText={setUsername}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#edb525',\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    marginVertical: 10,\n    paddingHorizontal: 10,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n  },\n  button: {\n    width: '80%',\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    marginVertical: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}