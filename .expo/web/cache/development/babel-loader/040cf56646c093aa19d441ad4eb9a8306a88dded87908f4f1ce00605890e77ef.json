{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { images } from \"../../data/images\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SingleGame = function SingleGame(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var id = route.params.id;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameData = _useState2[0],\n    setGameData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isInFavorites = _useState4[0],\n    setIsInFavorites = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    addMessage = _useState6[0],\n    setAddMessage = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    removeMessage = _useState8[0],\n    setRemoveMessage = _useState8[1];\n  var handleGoToFavorites = function handleGoToFavorites() {\n    navigation.navigate('Favorites');\n  };\n  useEffect(function () {\n    axios.get(\"https://zelda.fanapis.com/api/games/\" + id).then(function (response) {\n      var game = response.data.data;\n      setGameData(game);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [id]);\n  useEffect(function () {\n    var checkIfGameIsInFavorites = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedFavorites = yield AsyncStorage.getItem('favorites');\n          var favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n          var _isInFavorites = favorites.some(function (game) {\n            return game.id === id;\n          });\n          setIsInFavorites(_isInFavorites);\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function checkIfGameIsInFavorites() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkIfGameIsInFavorites();\n  }, [id]);\n  var handleAddToFavorites = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var storedFavorites = yield AsyncStorage.getItem('favorites');\n        var favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n        if (isInFavorites) {\n          setAddMessage('Already There!');\n          setRemoveMessage('');\n        } else {\n          var gameToAdd = gameData;\n          if (gameToAdd) {\n            var updatedFavorites = [].concat(_toConsumableArray(favorites), [gameToAdd]);\n            yield AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n            setIsInFavorites(true);\n            setAddMessage('Added Successfully');\n            setRemoveMessage('');\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleAddToFavorites() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleRemoveFromFavorites = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var storedFavorites = yield AsyncStorage.getItem('favorites');\n        var favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n        if (isInFavorites) {\n          var updatedFavorites = favorites.filter(function (game) {\n            return game.id !== id;\n          });\n          yield AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n          setIsInFavorites(false);\n          setAddMessage('');\n          setRemoveMessage('Removed Successfully');\n        } else {\n          setAddMessage('');\n          setRemoveMessage('Not there yet!');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleRemoveFromFavorites() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getGameImage = function getGameImage(id) {\n    var image = images.find(function (img) {\n      return img.id === id;\n    });\n    return image ? image.url : '';\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: gameData ? _jsx(_Fragment, {\n      children: _jsxs(View, {\n        style: styles.cardContainer,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: gameData.name\n        }), _jsx(Image, {\n          source: {\n            uri: getGameImage(gameData.id)\n          },\n          style: styles.image\n        }), _jsxs(Text, {\n          style: styles.developer,\n          children: [\"Developer: \", gameData.developer]\n        }), _jsxs(Text, {\n          style: styles.publisher,\n          children: [\"Publisher: \", gameData.publisher]\n        }), _jsxs(Text, {\n          style: styles.releaseDate,\n          children: [\"Release Date: \", gameData.released_date]\n        }), _jsxs(View, {\n          style: styles.buttonsContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.addButton],\n            onPress: handleAddToFavorites,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Add to favorites\"\n            })\n          }), addMessage !== '' && _jsx(Text, {\n            style: styles.successMessage,\n            children: addMessage\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, styles.removeButton],\n            onPress: handleRemoveFromFavorites,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Remove from Favorites\"\n            })\n          }), removeMessage !== '' && _jsx(Text, {\n            style: styles.errorMessage,\n            children: removeMessage\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, styles.addButton],\n          onPress: handleGoToFavorites,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Favorites\"\n          })\n        })]\n      })\n    }) : _jsx(Text, {\n      style: styles.loading,\n      children: \"Please Wait... Loading...\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#008f39',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  buttonsContainer: {\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 10,\n    width: '70%'\n  },\n  addButton: {\n    backgroundColor: '#008f39'\n  },\n  removeButton: {\n    backgroundColor: 'red'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  loading: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 22\n  },\n  successMessage: {\n    color: 'green',\n    marginTop: 5,\n    textAlign: 'center'\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 5,\n    textAlign: 'center'\n  }\n});\nexport default SingleGame;","map":{"version":3,"names":["React","useEffect","useState","axios","View","Text","Image","StyleSheet","TouchableOpacity","AsyncStorage","images","useNavigation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SingleGame","_ref","route","navigation","id","params","_useState","_useState2","_slicedToArray","gameData","setGameData","_useState3","_useState4","isInFavorites","setIsInFavorites","_useState5","_useState6","addMessage","setAddMessage","_useState7","_useState8","removeMessage","setRemoveMessage","handleGoToFavorites","navigate","get","then","response","game","data","catch","error","console","log","checkIfGameIsInFavorites","_ref2","_asyncToGenerator","storedFavorites","getItem","favorites","JSON","parse","some","apply","arguments","handleAddToFavorites","_ref3","gameToAdd","updatedFavorites","concat","_toConsumableArray","setItem","stringify","handleRemoveFromFavorites","_ref4","filter","getGameImage","image","find","img","url","style","styles","container","children","cardContainer","title","name","source","uri","developer","publisher","releaseDate","released_date","buttonsContainer","button","addButton","onPress","buttonText","successMessage","removeButton","errorMessage","loading","create","backgroundColor","flexGrow","justifyContent","alignItems","borderRadius","padding","marginTop","marginBottom","width","fontSize","fontWeight","color","height","textAlign"],"sources":["C:/Users/Lenovo/Desktop/React-Native-Project/components/Games/SingleGame.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { images } from '../../data/images';\nimport {ParamListBase, useNavigation} from '@react-navigation/native';\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\n\n\ninterface Game {\n  name: string;\n  description: string;\n  developer: string;\n  publisher: string;\n  released_date: string;\n  id: string;\n  image: string;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  count: number;\n  data: Game;\n}\n\ninterface SingleGameProps {\n  route: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nconst SingleGame: React.FC<SingleGameProps> = ({ route }) => {  const navigation = useNavigation<NativeStackNavigationProp<ParamListBase>>();\n  const { id } = route.params;\n  const [gameData, setGameData] = useState<Game | null>(null);\n  const [isInFavorites, setIsInFavorites] = useState<boolean>(false);\n  const [addMessage, setAddMessage] = useState<string>('');\n  const [removeMessage, setRemoveMessage] = useState<string>('');\n  \n\n  const handleGoToFavorites = () => {\n    navigation.navigate('Favorites');\n  };\n\n  useEffect(() => {\n    axios\n      .get<ApiResponse>(`https://zelda.fanapis.com/api/games/${id}`)\n      .then((response) => {\n        const game = response.data.data;\n        setGameData(game);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    const checkIfGameIsInFavorites = async () => {\n      try {\n        const storedFavorites = await AsyncStorage.getItem('favorites');\n        const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n        const isInFavorites = favorites.some((game: Game) => game.id === id);\n        setIsInFavorites(isInFavorites);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    checkIfGameIsInFavorites();\n  }, [id]);\n\n  const handleAddToFavorites = async () => {\n    try {\n      const storedFavorites = await AsyncStorage.getItem('favorites');\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n\n      if (isInFavorites) {\n        setAddMessage('Already There!');\n        setRemoveMessage('');\n      } else {\n        const gameToAdd = gameData;\n        if (gameToAdd) {\n          const updatedFavorites = [...favorites, gameToAdd];\n          await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n          setIsInFavorites(true);\n          setAddMessage('Added Successfully');\n          setRemoveMessage('');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleRemoveFromFavorites = async () => {\n    try {\n      const storedFavorites = await AsyncStorage.getItem('favorites');\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\n\n      if (isInFavorites) {\n        const updatedFavorites = favorites.filter((game: Game) => game.id !== id);\n        await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n        setIsInFavorites(false);\n        setAddMessage('');\n        setRemoveMessage('Removed Successfully');\n      } else {\n        setAddMessage('');\n        setRemoveMessage('Not there yet!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getGameImage = (id: string) => {\n    const image = images.find((img) => img.id === id);\n    return image ? image.url : '';\n  };\n\n  return (\n    <View style={styles.container}>\n      {gameData ? (\n        <>\n          <View style={styles.cardContainer}>\n            <Text style={styles.title}>{gameData.name}</Text>\n            <Image source={{ uri: getGameImage(gameData.id) }} style={styles.image} />\n            <Text style={styles.developer}>Developer: {gameData.developer}</Text>\n            <Text style={styles.publisher}>Publisher: {gameData.publisher}</Text>\n            <Text style={styles.releaseDate}>Release Date: {gameData.released_date}</Text>\n\n            <View style={styles.buttonsContainer}>\n              <TouchableOpacity\n                style={ [styles.button, styles.addButton]}\n                onPress={handleAddToFavorites}\n              >\n                <Text style={styles.buttonText}>Add to favorites</Text>\n              </TouchableOpacity>\n              {addMessage !== '' && (\n                <Text style={styles.successMessage}>{addMessage}</Text>\n              )}\n\n              <TouchableOpacity\n                style={ [styles.button, styles.removeButton]}\n                onPress={handleRemoveFromFavorites}\n              >\n                <Text style={styles.buttonText}>Remove from Favorites</Text>\n              </TouchableOpacity>\n              {removeMessage !== '' && (\n                <Text style={styles.errorMessage}>{removeMessage}</Text>\n              )}\n            </View>\n\n            <TouchableOpacity style={ [styles.button, styles.addButton ]} onPress={handleGoToFavorites}>\n              <Text style={styles.buttonText}>Favorites</Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      ) : (\n        <Text style = { styles.loading }>Please Wait... Loading...</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#008f39',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10,\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5,\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  buttonsContainer: {\n    marginTop: 10,\n    alignItems: 'center',\n  },\n  button: {\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 10,\n    width: '70%',\n  },\n  addButton: {\n    backgroundColor: '#008f39'\n  },\n  removeButton: {\n    backgroundColor: 'red'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  loading: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 22\n  },\n  successMessage: {\n    color: 'green',\n    marginTop: 5,\n    textAlign: 'center',\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 5,\n    textAlign: 'center',\n  },\n});\n\nexport default SingleGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}