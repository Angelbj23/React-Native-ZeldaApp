{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport images from \"../../data/images\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Games = function Games() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    gamesData = _useState2[0],\n    setGamesData = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    axios.get('https://zelda.fanapis.com/api/games').then(function (response) {\n      setGamesData(response.data.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var handleCardPress = function handleCardPress(id) {\n    navigation.navigate('SingleGame', {\n      id: id\n    });\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollContentContainer,\n    children: gamesData.map(function (game, index) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.cardContainer,\n        onPress: function onPress() {\n          return handleCardPress(game.id);\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: game.name\n        }), images[index] ? _jsx(Image, {\n          source: {\n            uri: images[index]\n          },\n          style: styles.image\n        }) : null, _jsxs(Text, {\n          style: styles.developer,\n          children: [\"Developer: \", game.developer]\n        }), _jsxs(Text, {\n          style: styles.publisher,\n          children: [\"Publisher: \", game.publisher]\n        }), _jsxs(Text, {\n          style: styles.releaseDate,\n          children: [\"Release Date: \", game.released_date]\n        })]\n      }, game.id);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  scrollContentContainer: {\n    backgroundColor: '#edb525',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardContainer: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  }\n});\nexport default Games;","map":{"version":3,"names":["React","useEffect","useState","axios","Text","Image","ScrollView","StyleSheet","TouchableOpacity","useNavigation","images","jsx","_jsx","jsxs","_jsxs","Games","_useState","_useState2","_slicedToArray","gamesData","setGamesData","navigation","get","then","response","data","catch","error","console","log","handleCardPress","id","navigate","contentContainerStyle","styles","scrollContentContainer","children","map","game","index","style","cardContainer","onPress","title","name","source","uri","image","developer","publisher","releaseDate","released_date","create","backgroundColor","flexGrow","justifyContent","alignItems","borderRadius","padding","marginTop","marginBottom","width","fontSize","fontWeight","color","height"],"sources":["C:/Users/Lenovo/Desktop/React-Native-Project/components/Games/Games.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { View, Text, Image, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport images from '../../data/images';\n\ninterface Game {\n  name: string;\n  description: string;\n  developer: string;\n  publisher: string;\n  released_date: string;\n  id: string;\n  image: string;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  count: number;\n  data: Game[];\n}\n\nconst Games = () => {\n  const [gamesData, setGamesData] = useState<Game[]>([]);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    axios\n      .get<ApiResponse>('https://zelda.fanapis.com/api/games')\n      .then((response) => {\n        setGamesData(response.data.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleCardPress = (id: string) => {\n    navigation.navigate('SingleGame', { id });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollContentContainer}>\n      {gamesData.map((game, index) => (\n        <TouchableOpacity\n          key={game.id}\n          style={styles.cardContainer}\n          onPress={() => handleCardPress(game.id)}\n        >\n          <Text style={styles.title}>{game.name}</Text>\n          {images[index] ? (\n            <Image source={{ uri: images[index] }} style={styles.image} />\n          ) : null}\n          <Text style={styles.developer}>Developer: {game.developer}</Text>\n          <Text style={styles.publisher}>Publisher: {game.publisher}</Text>\n          <Text style={styles.releaseDate}>Release Date: {game.released_date}</Text>\n        </TouchableOpacity>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollContentContainer: {\n    backgroundColor: '#edb525',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardContainer: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10,\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5,\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n});\n\nexport default Games;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAkBvC,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAClB,IAAAC,SAAA,GAAkCd,QAAQ,CAAS,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,UAAU,GAAGZ,aAAa,CAAC,CAAC;EAElCR,SAAS,CAAC,YAAM;IACdE,KAAK,CACFmB,GAAG,CAAc,qCAAqC,CAAC,CACvDC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClBJ,YAAY,CAACI,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,EAAU,EAAK;IACtCV,UAAU,CAACW,QAAQ,CAAC,YAAY,EAAE;MAAED,EAAE,EAAFA;IAAG,CAAC,CAAC;EAC3C,CAAC;EAED,OACEnB,IAAA,CAACN,UAAU;IAAC2B,qBAAqB,EAAEC,MAAM,CAACC,sBAAuB;IAAAC,QAAA,EAC9DjB,SAAS,CAACkB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACzBzB,KAAA,CAACN,gBAAgB;QAEfgC,KAAK,EAAEN,MAAM,CAACO,aAAc;QAC5BC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,eAAe,CAACQ,IAAI,CAACP,EAAE,CAAC;QAAA,CAAC;QAAAK,QAAA,GAExCxB,IAAA,CAACR,IAAI;UAACoC,KAAK,EAAEN,MAAM,CAACS,KAAM;UAAAP,QAAA,EAAEE,IAAI,CAACM;QAAI,CAAO,CAAC,EAC5ClC,MAAM,CAAC6B,KAAK,CAAC,GACZ3B,IAAA,CAACP,KAAK;UAACwC,MAAM,EAAE;YAAEC,GAAG,EAAEpC,MAAM,CAAC6B,KAAK;UAAE,CAAE;UAACC,KAAK,EAAEN,MAAM,CAACa;QAAM,CAAE,CAAC,GAC5D,IAAI,EACRjC,KAAA,CAACV,IAAI;UAACoC,KAAK,EAAEN,MAAM,CAACc,SAAU;UAAAZ,QAAA,GAAC,aAAW,EAACE,IAAI,CAACU,SAAS;QAAA,CAAO,CAAC,EACjElC,KAAA,CAACV,IAAI;UAACoC,KAAK,EAAEN,MAAM,CAACe,SAAU;UAAAb,QAAA,GAAC,aAAW,EAACE,IAAI,CAACW,SAAS;QAAA,CAAO,CAAC,EACjEnC,KAAA,CAACV,IAAI;UAACoC,KAAK,EAAEN,MAAM,CAACgB,WAAY;UAAAd,QAAA,GAAC,gBAAc,EAACE,IAAI,CAACa,aAAa;QAAA,CAAO,CAAC;MAAA,GAVrEb,IAAI,CAACP,EAWM,CAAC;IAAA,CACpB;EAAC,CACQ,CAAC;AAEjB,CAAC;AAED,IAAMG,MAAM,GAAG3B,UAAU,CAAC6C,MAAM,CAAC;EAC/BjB,sBAAsB,EAAE;IACtBkB,eAAe,EAAE,SAAS;IAC1BC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,aAAa,EAAE;IACbe,UAAU,EAAE,QAAQ;IACpBH,eAAe,EAAE,OAAO;IACxBI,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDlB,KAAK,EAAE;IACLmB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,OAAO;IACdL,SAAS,EAAE,CAAC;IACZC,YAAY,EAAE;EAChB,CAAC;EACDb,KAAK,EAAE;IACLc,KAAK,EAAE,GAAG;IACVI,MAAM,EAAE,GAAG;IACXL,YAAY,EAAE,EAAE;IAChBH,YAAY,EAAE;EAChB,CAAC;EACDT,SAAS,EAAE;IACTc,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,OAAO;IACdJ,YAAY,EAAE;EAChB,CAAC;EACDX,SAAS,EAAE;IACTa,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,OAAO;IACdJ,YAAY,EAAE;EAChB,CAAC;EACDV,WAAW,EAAE;IACXY,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,OAAO;IACdJ,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe7C,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}