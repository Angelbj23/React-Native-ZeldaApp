{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { images } from \"../../data/images\";\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Games = function Games() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    gamesData = _useState2[0],\n    setGamesData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchTerm = _useState4[0],\n    setSearchTerm = _useState4[1];\n  var navigation = useNavigation();\n  var handleLogout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield AsyncStorage.removeItem('isLoggedIn');\n      navigation.navigate('Login');\n      console.log('Logout successful');\n    });\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    axios.get('https://zelda.fanapis.com/api/games').then(function (response) {\n      setGamesData(response.data.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var handleCardPress = function handleCardPress(id) {\n    navigation.navigate('SingleGame', {\n      id: id\n    });\n  };\n  var filteredGames = gamesData.filter(function (game) {\n    return game.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.scrollContentContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: handleLogout,\n      children: _jsx(Text, {\n        style: styles.logoutButtonText,\n        children: \"Logout\"\n      })\n    }), _jsx(TextInput, {\n      style: styles.searchInput,\n      placeholder: \"Search Games by name\",\n      value: searchTerm,\n      onChangeText: setSearchTerm\n    }), filteredGames.map(function (game) {\n      var _images$find;\n      var image = (_images$find = images.find(function (img) {\n        return img.id === game.id;\n      })) == null ? void 0 : _images$find.url;\n      return _jsxs(TouchableOpacity, {\n        style: styles.cardContainer,\n        onPress: function onPress() {\n          return handleCardPress(game.id);\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: game.name\n        }), image && _jsx(Image, {\n          source: {\n            uri: image\n          },\n          style: styles.image\n        }), _jsxs(Text, {\n          style: styles.developer,\n          children: [\"Developer: \", game.developer]\n        }), _jsxs(Text, {\n          style: styles.publisher,\n          children: [\"Publisher: \", game.publisher]\n        }), _jsxs(Text, {\n          style: styles.releaseDate,\n          children: [\"Release Date: \", game.released_date]\n        })]\n      }, game.id);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  scrollContentContainer: {\n    backgroundColor: '#008f39',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  searchInput: {\n    width: '80%',\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginTop: 20,\n    marginBottom: 10,\n    backgroundColor: 'white'\n  },\n  cardContainer: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5\n  },\n  logoutButton: {\n    alignSelf: 'flex-end',\n    marginTop: 10,\n    backgroundColor: 'black',\n    borderRadius: 5,\n    padding: 10\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});\nexport default Games;","map":{"version":3,"names":["React","useEffect","useState","axios","Text","Image","ScrollView","StyleSheet","TouchableOpacity","TextInput","images","useNavigation","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Games","_useState","_useState2","_slicedToArray","gamesData","setGamesData","_useState3","_useState4","searchTerm","setSearchTerm","navigation","handleLogout","_ref","_asyncToGenerator","removeItem","navigate","console","log","apply","arguments","get","then","response","data","catch","error","handleCardPress","id","filteredGames","filter","game","name","toLowerCase","includes","contentContainerStyle","styles","scrollContentContainer","children","style","logoutButton","onPress","logoutButtonText","searchInput","placeholder","value","onChangeText","map","_images$find","image","find","img","url","cardContainer","title","source","uri","developer","publisher","releaseDate","released_date","create","backgroundColor","flexGrow","justifyContent","alignItems","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","marginTop","marginBottom","padding","fontSize","fontWeight","color","alignSelf"],"sources":["/Users/corso17/Desktop/React-Native-ZeldaApp/components/Games/Games.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {Text, Image, ScrollView, StyleSheet, TouchableOpacity, TextInput} from 'react-native';\nimport { images } from '../../data/images';\nimport {NavigationHelpersContext, ParamListBase, useNavigation} from '@react-navigation/native';\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\ninterface Game {\n  name: string;\n  description: string;\n  developer: string;\n  publisher: string;\n  released_date: string;\n  id: string;\n  image: string;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  count: number;\n  data: Game[];\n}\n\nconst Games = () => {\n  const [gamesData, setGamesData] = useState<Game[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigation = useNavigation<NativeStackNavigationProp<ParamListBase>>();\n\n  const handleLogout = async () => {\n    await AsyncStorage.removeItem('isLoggedIn');\n    navigation.navigate('Login');\n    console.log('Logout successful');\n  };\n\n  useEffect(() => {\n    axios\n      .get<ApiResponse>('https://zelda.fanapis.com/api/games')\n      .then((response) => {\n        setGamesData(response.data.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const handleCardPress = (id: string) => {\n    navigation.navigate('SingleGame', { id: id });\n  };\n\n  const filteredGames = gamesData.filter((game) =>\n    game.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollContentContainer}>\n      <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\n        <Text style={styles.logoutButtonText}>Logout</Text>\n      </TouchableOpacity>\n      <TextInput\n        style={styles.searchInput}\n        placeholder=\"Search Games by name\"\n        value={searchTerm}\n        onChangeText={setSearchTerm}\n      />\n      {filteredGames.map((game) => {\n        const image = images.find((img) => img.id === game.id)?.url;\n        return (\n          <TouchableOpacity\n            key={game.id}\n            style={styles.cardContainer}\n            onPress={() => handleCardPress(game.id)}\n          >\n            <Text style={styles.title}>{game.name}</Text>\n            {image && <Image source={{ uri: image }} style={styles.image} />}\n            <Text style={styles.developer}>Developer: {game.developer}</Text>\n            <Text style={styles.publisher}>Publisher: {game.publisher}</Text>\n            <Text style={styles.releaseDate}>Release Date: {game.released_date}</Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollContentContainer: {\n    backgroundColor: '#008f39',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  searchInput: {\n    width: '80%',\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginTop: 20,\n    marginBottom: 10,\n    backgroundColor:'white'\n  },\n  cardContainer: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    marginTop: 20,\n    marginBottom: 20,\n    width: '80%',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 5,\n    marginBottom: 10,\n  },\n  image: {\n    width: 250,\n    height: 250,\n    marginBottom: 10,\n    borderRadius: 5,\n  },\n  developer: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  publisher: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  releaseDate: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 5,\n  },\n  logoutButton: {\n    alignSelf:'flex-end',\n    marginTop:10,\n    backgroundColor: 'black',\n    borderRadius: 5,\n    padding: 10,\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontSize: 16,\n  }\n});\n\nexport default Games;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}