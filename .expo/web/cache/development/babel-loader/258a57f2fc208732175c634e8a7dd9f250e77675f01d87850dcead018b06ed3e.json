{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from \"./components/Login/Login\";\nimport Games from \"./components/Games/Games\";\nimport SingleGame from \"./components/Games/SingleGame\";\nimport Favorites from \"./components/Favorites/Favorites\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  useEffect(function () {\n    var loadFonts = function () {\n      var _ref = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          zelda: require(\"./assets/fonts/Break_Love_Font[1].ttf\")\n        });\n      });\n      return function loadFonts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadFonts();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"Games\",\n        component: Games\n      }), _jsx(Stack.Screen, {\n        name: \"SingleGame\",\n        component: SingleGame\n      }), _jsx(Stack.Screen, {\n        name: \"Favorites\",\n        component: Favorites\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","NavigationContainer","createNativeStackNavigator","Login","Games","SingleGame","Favorites","Font","jsx","_jsx","jsxs","_jsxs","Stack","App","loadFonts","_ref","_asyncToGenerator","loadAsync","zelda","require","apply","arguments","children","Navigator","Screen","name","component"],"sources":["C:/Users/Lenovo/Desktop/React-Native-Project/App.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Login from './components/Login/Login';\nimport Games from './components/Games/Games';\nimport SingleGame from './components/Games/SingleGame';\nimport Favorites from './components/Favorites/Favorites';\nimport * as Font from 'expo-font';\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n\n  useEffect(() => {\n    const loadFonts = async () => {\n      await Font.loadAsync({\n        zelda: require('./assets/fonts/Break_Love_Font[1].ttf')\n      });\n    };\n\n    loadFonts();\n  }, []);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Login\" component={Login} />\n        <Stack.Screen name=\"Games\" component={Games} />\n        <Stack.Screen name=\"SingleGame\" component={SingleGame} />\n        <Stack.Screen name=\"Favorites\" component={Favorites} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,UAAU;AACjB,OAAOC,SAAS;AAChB,OAAO,KAAKC,IAAI,MAAM,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,KAAK,GAAGV,0BAA0B,CAAC,CAAC;AAE1C,IAAMW,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAEhBb,SAAS,CAAC,YAAM;IACd,IAAMc,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,MAAMT,IAAI,CAACU,SAAS,CAAC;UACnBC,KAAK,EAAEC,OAAO,wCAAwC;QACxD,CAAC,CAAC;MACJ,CAAC;MAAA,gBAJKL,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAId;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACEL,IAAA,CAACR,mBAAmB;IAAAqB,QAAA,EAClBX,KAAA,CAACC,KAAK,CAACW,SAAS;MAAAD,QAAA,GACdb,IAAA,CAACG,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEvB;MAAM,CAAE,CAAC,EAC/CM,IAAA,CAACG,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEtB;MAAM,CAAE,CAAC,EAC/CK,IAAA,CAACG,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAErB;MAAW,CAAE,CAAC,EACzDI,IAAA,CAACG,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEpB;MAAU,CAAE,CAAC;IAAA,CACxC;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeO,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}